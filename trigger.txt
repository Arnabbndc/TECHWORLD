1. rating
2. brandAdd
3. product chosen before
4. remove er hazar hazar procedure




CREATE OR REPLACE TRIGGER BUY_TRIGGER
BEFORE INSERT
ON BUYS
FOR EACH ROW
DECLARE
BEGIN
DELETE_IN_CART(:NEW.USERID,:NEW.PRODUCTID);
END ;
/


CREATE OR REPLACE TRIGGER REMOVE_FROM_CART
BEFORE DELETE
ON CART
FOR EACH ROW
DECLARE
CNT NUMBER;
BEGIN
SELECT COUNT(*) INTO CNT
FROM PRODUCT_CHOSEN
WHERE USERID=:OLD.USERID AND PRODUCTID=:OLD.PRODUCTID;
IF CNT=0 THEN
INSERT_INTO_CHOSEN(:OLD.USERID,:OLD.PRODUCTID);
END IF;
END ;
/

CREATE OR REPLACE TRIGGER PC_BUILDER_UPDATE
BEFORE UPDATE
OF MOTHERBOARDID
ON PC_BUILDER
FOR EACH ROW
DECLARE
BEGIN
IF :OLD.MOTHERBOARDID!= :NEW.MOTHERBOARDID THEN
:NEW.PROCESSORID:= NULL;
:NEW.GRAPHICS_CARDID:= NULL;
:NEW.RAM1ID:= NULL;
:NEW.RAM2ID:= NULL;
:NEW.SSDID:= NULL;
:NEW.HDDID:= NULL;
:NEW.POWER_SUPPLYID:= NULL;
-- DBMS_OUTPUT.PUT_LINE('HOISEE');

END IF;
END ;
/



CREATE OR REPLACE TRIGGER PC_BUILD_CART_ADD
BEFORE DELETE
ON PC_BUILDER
FOR EACH ROW
DECLARE
BEGIN
IF :OLD.MOTHERBOARDID IS NOT NULL THEN
ADD_TO_CART(:OLD.USERID,:OLD.MOTHERBOARDID);
END IF;
IF :OLD.GRAPHICS_CARDIDIS NOT NULL THEN
ADD_TO_CART(:OLD.USERID,:OLD.GRAPHICS_CARDID);
END IF;
IF :OLD.HDDID IS NOT NULL THEN
ADD_TO_CART(:OLD.USERID,:OLD.HDDID);
END IF;
IF :OLD.POWER_SUPPLYID IS NOT NULL THEN
ADD_TO_CART(:OLD.USERID,:OLD.POWER_SUPPLYID);
END IF;
IF :OLD.PROCESSORID IS NOT NULL THEN
ADD_TO_CART(:OLD.USERID,:OLD.PROCESSORID);
END IF;
IF :OLD.RAM1ID IS NOT NULL THEN
ADD_TO_CART(:OLD.USERID,:OLD.RAM1ID);
END IF;
IF :OLD.RAM2ID IS NOT NULL THEN
ADD_TO_CART(:OLD.USERID,:OLD.RAM2ID);
END IF;
IF :OLD.SSDID IS NOT NULL THEN
ADD_TO_CART(:OLD.USERID,:OLD.SSDID);
END IF;
END ;
/