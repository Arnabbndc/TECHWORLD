CREATE OR REPLACE FUNCTION "GET_ORDERID" (UID IN NUMBER)
RETURN NUMBER
AS
OID NUMBER;
BEGIN
	SELECT MAX(ORDERID) INTO OID
	FROM BUYS
	WHERE USERID=UID;
	OID:= OID+1;
	IF OID>0  THEN
	OID:=OID;
	ELSE
	OID:=1;
	END IF;
	RETURN OID;
END;
/

CREATE OR REPLACE FUNCTION "ALREADY_IN_CART"(UID IN NUMBER, PID IN NUMBER) 
RETURN NUMBER IS
PCOUNT NUMBER;

BEGIN
PCOUNT := 0;

SELECT QUANTITY INTO PCOUNT
FROM CART 
WHERE USERID =UID AND PRODUCTID =PID ;
RETURN PCOUNT ;

EXCEPTION
WHEN NO_DATA_FOUND THEN
RETURN 0 ;
END ;
/




CREATE OR REPLACE PROCEDURE "AD_PRIO_DEC"(AID IN NUMBER)  IS
BEGIN
UPDATE ADVERTISEMENT
SET PRIORITY=PRIORITY-1
WHERE (ADVERTISEMENTID= AID AND PRIORITY>0);
END ;

/
CREATE OR REPLACE PROCEDURE "AD_PRIO_INC"(AID IN NUMBER)  IS
BEGIN
UPDATE ADVERTISEMENT
SET PRIORITY=PRIORITY+1
WHERE (ADVERTISEMENTID= AID);
END ;
/
CREATE OR REPLACE PROCEDURE "ADD_BRAND" (BRANDNAME IN VARCHAR2,LOGO IN VARCHAR2,COUNTRY IN VARCHAR2) IS 

BEGIN
INSERT INTO BRANDS(BRANDNAME,LOGO,COUNTRY)
VALUES (BRANDNAME,LOGO,COUNTRY);
END ;

/
CREATE OR REPLACE PROCEDURE "ADD_NEWS" (DETAILS IN VARCHAR2) IS 

BEGIN
INSERT INTO BREAKING_NEWS(DETAILS)
VALUES (DETAILS);
END ;
/
CREATE OR REPLACE PROCEDURE "ADD_TO_CART" (UID IN NUMBER, PID IN NUMBER) IS
PCOUNT NUMBER;
BEGIN
PCOUNT:=ALREADY_IN_CART(UID,PID);
IF PCOUNT>0 THEN
INCREASE_CART(UID,PID);
ELSE
INSERT INTO CART
VALUES (UID,PID,1);

END IF;
END ;
/



CREATE OR REPLACE PROCEDURE "BAN_UNBAN_USER" (UID IN NUMBER)
AS
BEGIN
 UPDATE USERS
    SET IS_BAN = 1-IS_BAN
    WHERE USERID = UID;
END;

/

CREATE OR REPLACE PROCEDURE "DECREASE_CART"(UID IN VARCHAR2, PID IN VARCHAR2)  IS
PCOUNT NUMBER;
BEGIN
    UPDATE CART
    SET QUANTITY = QUANTITY-1
    WHERE USERID = UID AND PRODUCTID= PID;
		SELECT QUANTITY INTO PCOUNT 
		FROM CART
		WHERE USERID = UID AND PRODUCTID= PID;

IF PCOUNT=0 THEN
DELETE FROM CART
WHERE (USERID= UID AND PRODUCTID= PID);
END IF;
END ;
/

CREATE OR REPLACE PROCEDURE "DELETE_AD" (AID IN NUMBER)  IS
BEGIN
    DELETE FROM ADVERTISEMENT
    WHERE ADVERTISEMENTID = AID;
END ;

/
CREATE OR REPLACE PROCEDURE "DELETE_BRAND" (BID IN NUMBER)
AS
BEGIN

    DELETE FROM BRANDS
    WHERE BRANDID = BID;
END;

/
CREATE OR REPLACE PROCEDURE "DELETE_NEWS"(NID IN NUMBER)  IS
BEGIN
    DELETE FROM BREAKING_NEWS
    WHERE BN_ID = NID;
END ;
/
CREATE OR REPLACE PROCEDURE "DELETE_USER" (UID IN NUMBER)
AS
BEGIN
    DELETE FROM USERS
    WHERE USERID = UID;
END;
/
CREATE OR REPLACE PROCEDURE "INSERT_USER" (NAME IN VARCHAR2,EMAIL IN VARCHAR2,PASSWORD IN VARCHAR2,ADDRESS IN VARCHAR2) IS 

BEGIN
INSERT INTO
    USERS(NAME,EMAIL,PASSWORD,ADDRESS)       
             VALUES( NAME,EMAIL,PASSWORD,ADDRESS ) ;
END ;

/
CREATE OR REPLACE PROCEDURE "NEW_AD" (TYPE IN NUMBER,PRODUCTID IN NUMBER,IMAGE IN VARCHAR2,DETAILS IN VARCHAR2,LINK IN VARCHAR2) IS 

BEGIN
INSERT INTO ADVERTISEMENT(TYPE,PRODUCTID,IMAGE,DETAILS,LINK)
VALUES (TYPE,PRODUCTID,IMAGE,DETAILS,LINK);
END ;
/
CREATE OR REPLACE PROCEDURE "SHOW_HIDE_NEWS" (NID IN NUMBER)
AS
BEGIN

 UPDATE BREAKING_NEWS
    SET IS_SHOW = 1-IS_SHOW
    WHERE BN_ID = NID;
END;
/
CREATE OR REPLACE PROCEDURE "UPDATE_AD" (ADID1 IN NUMBER,TYPE1 IN NUMBER, PID1 IN NUMBER, IMAGE1 IN VARCHAR2, DETAILS1 IN VARCHAR2, LINK1 IN VARCHAR2)
AS
BEGIN
    UPDATE ADVERTISEMENT
    SET TYPE=TYPE1,PRODUCTID=PID1,IMAGE=IMAGE1,DETAILS=DETAILS1,LINK=LINK1
    WHERE ADVERTISEMENTID=ADID1;
END;


/
CREATE OR REPLACE PROCEDURE "UPDATE_BRAND" (BID1 IN NUMBER,NAME1 IN VARCHAR2,LOGO1 IN VARCHAR2, COUNTRY1 IN VARCHAR2)
AS
BEGIN
    UPDATE BRANDS
    SET BRANDNAME=NAME1,LOGO=LOGO1,COUNTRY=COUNTRY1
    WHERE BRANDID=BID1;
END;

/
CREATE OR REPLACE PROCEDURE "UPDATE_NEWS" (NID1 IN NUMBER,DETAILS1 IN VARCHAR2)
AS
BEGIN
    UPDATE BREAKING_NEWS
    SET DETAILS=DETAILS1
    WHERE BN_ID=NID1;
END;
/
CREATE OR REPLACE PROCEDURE "USER_UPDATE" (USERID1 IN NUMBER, NAME1 IN VARCHAR2, EMAIL1 IN VARCHAR2, ADDRESS1 IN VARCHAR2, PASSWORD1 IN VARCHAR2)
AS
BEGIN
    UPDATE USERS
    SET EMAIL = EMAIL1, ADDRESS = ADDRESS1, NAME= NAME1, PASSWORD= PASSWORD1
    WHERE USERID = USERID1;
END;
/



CREATE OR REPLACE PROCEDURE "BUY_ALL" (UID IN NUMBER)
AS
OID NUMBER;
BEGIN
OID:= GET_ORDERID(UID);
	INSERT INTO BUYS(USERID, PRODUCTID,QUANTITY,ORDERID)
SELECT USERID, PRODUCTID,QUANTITY, OID
FROM CART
WHERE USERID = UID;
END;
/


CREATE OR REPLACE PROCEDURE "DELETE_IN_CART" (UID IN NUMBER, PID IN NUMBER)
AS
BEGIN
 DELETE FROM CART
 WHERE USERID=UID AND PRODUCTID= PID;
END;
/

CREATE OR REPLACE PROCEDURE "INSERT_INTO_CHOSEN" (UID IN NUMBER, PID IN NUMBER)
AS
BEGIN
	INSERT INTO PRODUCT_CHOSEN
	VALUES (UID,PID);
END;
/


CREATE OR REPLACE PROCEDURE "INCREASE_CART"(UID IN VARCHAR2, PID IN VARCHAR2)  IS
PCOUNT NUMBER;
BEGIN
    UPDATE CART
    SET QUANTITY = QUANTITY+1
    WHERE USERID = UID AND PRODUCTID= PID;
END ;
/

CREATE OR REPLACE PROCEDURE "ADD_MOTHERBOARD" ( 
                MPRICE IN NUMBER , 
                MIMAGE IN VARCHAR2 , 
                MSTOCK IN NUMBER , 
                MWARRANTY IN NUMBER , 
                MBRANDID IN NUMBER , 
                MPRODUCT_NAME IN VARCHAR2 , 
 
                MTYPE IN VARCHAR2 , 
                MDETAILS IN VARCHAR2 ,                 
                MCHIPSET IN VARCHAR2 , 
                MFORM_FACTOR IN VARCHAR2 , 
                MAUDIO IN VARCHAR2 , 
                MPCI IN VARCHAR2 , 
                MSUPPORTED_SOFTWARE IN VARCHAR2 , 
                MSLOTS IN VARCHAR2 , 
                MSUPPORTED_MEMORY IN VARCHAR2 , 
                MMAXIMUM_MEMORY IN VARCHAR2 , 
                MGRAPHICS IN VARCHAR2 , 
                MHDMI IN VARCHAR2 , 
                MUSB_TYPE IN VARCHAR2 , 
                MLAN_PORTS IN VARCHAR2)
AS
MPRODUCTID NUMBER;
BEGIN
	INSERT INTO PRODUCTS(PRICE)
		VALUES(-1);
		SELECT PRODUCTID INTO MPRODUCTID
		FROM PRODUCTS
		WHERE PRICE=-1;
		INSERT INTO MOTHERBOARD(PRODUCTID)
		VALUES(MPRODUCTID);
    UPDATE PRODUCTS
    SET            PRICE=MPRICE,
                   IMAGE   =  MIMAGE, 
                   STOCK   =  MSTOCK, 
                   WARRANTY   =  MWARRANTY, 
                   BRANDID   =  MBRANDID, 
                   PRODUCT_NAME   =  MPRODUCT_NAME, 
                   
                    
                   TYPE   =  MTYPE, 
                   DETAILS   =  MDETAILS 
		    WHERE PRODUCTID   =  MPRODUCTID;
				UPDATE MOTHERBOARD															 
        SET        CHIPSET   =  MCHIPSET, 
                   FORM_FACTOR   =  MFORM_FACTOR, 
                   AUDIO   =  MAUDIO ,
                   PCI   =  MPCI ,
                   SUPPORTED_SOFTWARE   =  MSUPPORTED_SOFTWARE, 
                   SLOTS   =  MSLOTS ,
                   SUPPORTED_MEMORY   =  MSUPPORTED_MEMORY, 
                   MAXIMUM_MEMORY   =  MMAXIMUM_MEMORY, 
                   GRAPHICS   =  MGRAPHICS, 
                   HDMI   =  MHDMI, 
                   USB_TYPE   =  MUSB_TYPE, 
                   LAN_PORTS  =  MLAN_PORTS
    WHERE PRODUCTID   =  MPRODUCTID;
END;
/

CREATE OR REPLACE PROCEDURE "UPDATE_MOTHERBOARD" (MPRODUCTID IN NUMBER , 
                MPRICE IN NUMBER , 
                MIMAGE IN VARCHAR2 , 
                MSTOCK IN NUMBER , 
                MWARRANTY IN NUMBER , 
                MBRANDID IN NUMBER , 
                MPRODUCT_NAME IN VARCHAR2 , 
                MTYPE IN VARCHAR2 , 
                MDETAILS IN VARCHAR2 ,                 
                MCHIPSET IN VARCHAR2 , 
                MFORM_FACTOR IN VARCHAR2 , 
                MAUDIO IN VARCHAR2 , 
                MPCI IN VARCHAR2 , 
                MSUPPORTED_SOFTWARE IN VARCHAR2 , 
                MSLOTS IN VARCHAR2 , 
                MSUPPORTED_MEMORY IN VARCHAR2 , 
                MMAXIMUM_MEMORY IN VARCHAR2 , 
                MGRAPHICS IN VARCHAR2 , 
                MHDMI IN VARCHAR2 , 
                MUSB_TYPE IN VARCHAR2 , 
                MLAN_PORTS IN VARCHAR2)
AS
BEGIN
    UPDATE PRODUCTS
    SET            PRICE=MPRICE,
                   IMAGE   =  MIMAGE, 
                   STOCK   =  MSTOCK, 
                   WARRANTY   =  MWARRANTY, 
                   BRANDID   =  MBRANDID, 
                   PRODUCT_NAME   =  MPRODUCT_NAME, 

                   TYPE   =  MTYPE, 
                   DETAILS   =  MDETAILS 
		    WHERE PRODUCTID   =  MPRODUCTID;
				UPDATE MOTHERBOARD															 
        SET        CHIPSET   =  MCHIPSET, 
                   FORM_FACTOR   =  MFORM_FACTOR, 
                   AUDIO   =  MAUDIO ,
                   PCI   =  MPCI ,
                   SUPPORTED_SOFTWARE   =  MSUPPORTED_SOFTWARE, 
                   SLOTS   =  MSLOTS ,
                   SUPPORTED_MEMORY   =  MSUPPORTED_MEMORY, 
                   MAXIMUM_MEMORY   =  MMAXIMUM_MEMORY, 
                   GRAPHICS   =  MGRAPHICS, 
                   HDMI   =  MHDMI, 
                   USB_TYPE   =  MUSB_TYPE, 
                   LAN_PORTS  =  MLAN_PORTS
    WHERE PRODUCTID   =  MPRODUCTID;
END;
/